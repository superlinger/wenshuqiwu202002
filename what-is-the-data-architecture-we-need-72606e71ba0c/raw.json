[{
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/30/1*_QT5PI8FpjJKJnVYbFcX-w.png?q=20",
  "caption": "Photo via Pixabay",
  "type": "image",
  "file": "1!_QT5PI8FpjJKJnVYbFcX-w.png"
}, {
  "tag": "H1",
  "text": "What is the Data Architecture We Need?",
  "translation": "我们需要什么数据架构？"
}, {
  "tag": "P",
  "text": "In the new era of Big Data and Data Sciences, it is vitally important for an enterprise to have a centralized data architecture aligned with business processes, which scales with business growth and evolves with technological advancements. A successful data architecture provides clarity about every aspect of the data, which enables data scientists to work with trustable data efficiently and to solve complex business problems. It also prepares an organization to quickly take advantage of new business opportunities by leveraging emerging technologies and improves operational efficiency by managing complex data and information delivery throughout the enterprise.",
  "translation": "在大数据和数据科学的新时代，对于企业而言，拥有与业务流程保持一致的集中式数据体系结构至关重要，该体系结构随业务增长而扩展，并随技术进步而发展。 成功的数据架构可以使数据的各个方面变得清晰，从而使数据科学家能够高效地处理可信赖的数据并解决复杂的业务问题。 它还使组织做好准备，以利用新兴技术迅速利用新的商机，并通过管理整个企业中的复杂数据和信息交付来提高运营效率。"
}, {
  "tag": "P",
  "text": "When compared with information architecture, system architecture, and software architecture, data architecture is relatively new. The role of Data Architects has also been nebulous and has fallen on the shoulders of senior business analysts, ETL developers, and data scientists. Nonetheless, I will use Data Architect to refer to those data management professionals who design data architecture for an organization.",
  "translation": "与信息体系结构，系统体系结构和软件体系结构相比，数据体系结构相对较新。 数据架构师的角色也很模糊，已经落在了高级业务分析师，ETL开发人员和数据科学家的肩膀上。 尽管如此，我将使用Data Architect来指代那些为组织设计数据架构的数据管理专业人员。"
}, {
  "tag": "P",
  "text": "When talking about architecture, we often think about the analogy with building architecture. A conventional building architect plans, designs, and reviews the construction of a building. The design process involves working with the clients to fully gather the requirements, understanding the legal and environmental constraints of the location, and working with engineers, surveyors and other specialists to ensure the design is realistic and within the budget. The complexity of the job is indeed very similar to the role of a data architect. However, there are a few fundamental differences between the two architect roles:",
  "translation": "在谈论建筑时，我们经常会想到与建筑的类比。 传统的建筑设计师计划，设计和审查建筑物的建造。 设计过程包括与客户合作以充分收集需求，了解场所的法律和环境限制，并与工程师，测量师和其他专家合作以确保设计是现实的并且在预算之内。 这项工作的复杂性确实与数据架构师的角色非常相似。 但是，两个架构师角色之间存在一些基本差异："
}, {
  "tag": "UL",
  "texts": ["The building architecture is designed top-down, while data architecture is often an integration process of the components or systems that likely already exist.", "A building architect has to know the full requirements and define the entire scope before he or she builds the building. The scope for a data architecture can be broad and easily changed. A successful data architecture, therefore, should be designed to be flexible and to anticipate changes in the future.", "A building architect has precise educational and professional requirements and should possess in-depth knowledge in business, art, structural physics, and building materials. On the other hand, most data architects come from an IT background with professional experience in a few companies or industries and limited exposure to the business. They, therefore, should be aware that their design could be biased and that they need to adjust it based on feedback from both business and technical expertise in the organization.", "The building design is almost always for a new building being built from scratch. A building architect, therefore, could plan and design entirely based on the new requirements and new materials. A data architect does not have this luxury. They can seldom start from scratch, but need to understand the existing platforms and databases while designing for the future."],
  "translations": ["建筑物架构是自上而下设计的，而数据架构通常是可能已经存在的组件或系统的集成过程。", "建筑设计师在建造建筑物之前必须了解全部要求并定义整个范围。 数据体系结构的范围可以广泛并且容易更改。 因此，成功的数据架构应设计为灵活的，并可以预见未来的变化。", "一名建筑建筑师具有严格的教育和专业要求，并且应在商业，艺术，结构物理和建筑材料方面拥有深入的知识。 另一方面，大多数数据架构师来自IT背景，在一些公司或行业中具有专业经验，并且对业务的了解有限。 因此，他们应该意识到自己的设计可能存在偏差，并且需要根据组织中业务和技术专长的反馈来调整设计。", "建筑物设计几乎总是针对从头开始建造的新建筑物。 因此，建筑设计师可以完全根据新要求和新材料进行规划和设计。 数据架构师没有这种奢侈。 他们很少从头开始，但是在设计未来时需要了解现有平台和数据库。"]
}, {
  "tag": "P",
  "text": "Given all these differences, a data architect could still learn from building architects and, in particular, take their top-down approach to improve data architecture design. In many organizations, there has been a lack of systematic, centralized, end-to-end data architecture designs. Below lists some of the main reasons:",
  "translation": "考虑到所有这些差异，数据架构师仍然可以向建筑架构师学习，尤其是采用自上而下的方法来改进数据架构设计。 在许多组织中，缺乏系统的，集中的，端到端的数据体系结构设计。 下面列出了一些主要原因："
}, {
  "tag": "UL",
  "texts": ["A company has multiple IT departments, who work in silos with their own data standards and architecture.", "The applications and processes are built based on individual business requirements, with no data architecture standards to follow.", "Data architect has the role of only focusing on a limited number of technical areas and possess limited business knowledge about the data.", "IT projects are managed without considering data architecture as part of the design phase; data scientists and engineers code their way with no consistent data management process."],
  "translations": ["一个公司有多个IT部门，他们各自使用各自的数据标准和体系结构工作。", "应用程序和流程是根据单个业务需求构建的，没有遵循的数据体系结构标准。", "数据架构师的作用是仅关注有限的技术领域，并且对数据拥有有限的业务知识。", "管理IT项目时，在设计阶段不考虑数据体系结构； 数据科学家和工程师无需遵循一致的数据管理流程即可编写代码。"]
}, {
  "tag": "P",
  "text": "With these shortfalls, we often see a company with disjointed data systems and gaps between teams and departments. The disparities lead to the poor performance of the systems with many hand-offs, a long time to troubleshoot when a production data issue arises, a lack of accountability to reach the right solution across systems, and a lack of capability to assess the impact of a change. Lastly, the disjointed systems could cause tremendous effort to analyze and research when migrated or re-engineered to the next-gen platform.",
  "translation": "由于存在这些不足，我们经常看到一家公司的数据系统脱节，并且团队和部门之间存在差距。 差异导致系统性能低下，需要进行大量交接，在生产数据出现问题时需要较长时间进行故障排除，缺乏在整个系统上找到正确解决方案的责任感，并且缺乏评估产品影响的能力 改变。 最后，脱节的系统在迁移或重新设计到下一代平台时可能会花费大量精力进行分析和研究。"
}, {
  "tag": "P",
  "text": "Given all these, a successful enterprise needs to have a top-down coherent data architecture designed based on the business processes and operations. In particular, just like what a building architect does, an enterprise data architect needs to build a blueprint at the conceptual and logical level first, before applying the technologies to the detailed application designs and implementations.",
  "translation": "考虑到所有这些，成功的企业需要具有基于业务流程和运营设计的自上而下的一致数据架构。 尤其是，就像建筑架构师所做的那样，企业数据架构师需要先在概念和逻辑级别构建蓝图，然后再将技术应用于详细的应用程序设计和实现。"
}, {
  "tag": "H2",
  "text": "1. Conceptual Level Data Architecture Design based on Business Process and Operations",
  "translation": "1.基于业务流程和运营的概念级数据架构设计"
}, {
  "tag": "P",
  "text": "In modern IT, business processes are supported and driven by data entities, data flows, and business rules applied to the data. A data architect, therefore, needs to have in-depth business knowledge, including Financial, Marketing, Products, and industry-specific expertise of the business processes, such as Health, Insurance, Manufacturers, and Retailers. He or she can then properly build a data blueprint at the enterprise level by designing the data entities and taxonomies that represent each business domain, as well as the data flow underneath the business process. In particular, the following areas need to be considered and planned at this conceptual stage:",
  "translation": "在现代IT中，业务流程由数据实体，数据流和应用于数据的业务规则支持和驱动。 因此，数据架构师需要具有深入的业务知识，包括财务，市场营销，产品以及业务流程（例如健康，保险，制造商和零售商）的特定于行业的专业知识。 然后，他或她可以通过设计代表每个业务域的数据实体和分类法以及业务流程下的数据流，来在企业级别正确构建数据蓝图。 在此概念阶段尤其需要考虑和计划以下领域："
}, {
  "tag": "UL",
  "texts": ["The core data entities and data elements such as those about customers, products, sales.", "The output data needed by the clients and customers.", "The source data to be gathered and transformed or referenced to produce the output data.", "Ownership of each data entity and how it should be consumed and distributed based on business use cases.", "Security policies to be applied to each data entity.", "The relationships between the data entities, such as reference integrity, business rules, execution sequence.", "Standard data classification and taxonomy.", "Standards of data quality, operations, and Service Level Agreements (SLAs)."],
  "translations": ["核心数据实体和数据元素，例如关于客户，产品，销售的数据。", "客户和客户所需的输出数据。", "要收集，转换或引用的源数据以生成输出数据。", "每个数据实体的所有权以及如何根据业务用例使用和分配它。", "要应用于每个数据实体的安全策略。", "数据实体之间的关系，例如参考完整性，业务规则，执行顺序。", "标准数据分类和分类法。", "数据质量，操作和服务水平协议（SLA）的标准。"]
}, {
  "tag": "P",
  "text": "This conceptual level of design consists of the underlying data entities that support each business function. The blueprint is crucial for the successful design and implementation of Enterprise and System architectures and their future expansions or upgrades. In many organizations, this conceptual design is usually embedded in the business analysis driven by the individual project without guidance from the perspective of enterprise end-to-end solutions and standards.",
  "translation": "设计的概念级别由支持每个业务功能的基础数据实体组成。 蓝图对于成功设计和实施企业和系统架构及其未来的扩展或升级至关重要。 在许多组织中，这种概念设计通常嵌入到由单个项目驱动的业务分析中，而没有从企业端到端解决方案和标准的角度进行指导。"
}, {
  "tag": "H2",
  "text": "2. Logical Level Data Architecture Design",
  "translation": "2.逻辑级数据架构设计"
}, {
  "tag": "P",
  "text": "This level of design is sometimes called data modeling by considering which type of database or data format to use. It connects the business requirements to the underlying technology platforms and systems. However, most organizations have data modeling designed only within a particular database or system, given the siloed role of the data modeler. A successful data architecture should be developed with an integrated approach, by considering the standards applicable to each database or system, and the data flows between these data systems. In particular, the following 5 areas need to be designed in a synergistic way:",
  "translation": "通过考虑使用哪种数据库或数据格式，这种设计水平有时称为数据建模。 它将业务需求连接到基础技术平台和系统。 但是，考虑到数据建模者的角色，大多数组织仅在特定数据库或系统中设计了数据建模。 通过考虑适用于每个数据库或系统的标准以及这些数据系统之间的数据流，应采用集成方法开发成功的数据体系结构。 特别是，以下五个领域需要以协同方式进行设计："
}, {
  "tag": "P",
  "text": "The naming conventions and data integrity",
  "translation": "命名约定和数据完整性"
}, {
  "tag": "P",
  "text": "The naming conventions for data entities and elements should be applied consistently to each database. Also, the integrity between the data source and its references should be enforced if the same data have to reside in multiple databases. Ultimately, these data elements should belong to a data entity in the conceptual design in the data architecture, which can then be updated or modified synergistically and accurately based on business requirements.",
  "translation": "数据实体和元素的命名约定应一致地应用于每个数据库。 同样，如果相同数据必须驻留在多个数据库中，则应加强数据源及其引用之间的完整性。 最终，这些数据元素应属于数据体系结构中概念设计中的数据实体，然后可以根据业务需求协同准确地对其进行更新或修改。"
}, {
  "tag": "P",
  "text": "Data archival/retention policies",
  "translation": "数据归档/保留策略"
}, {
  "tag": "P",
  "text": "The data archival and retention policies are often not considered or established until every late-stage on Production, which caused wasted resources, inconsistent data states across different databases, and poor performance of data queries and updates. To enforce the data integrity, data architects should define the data archival and retention policy in the data architecture based on Operational standards.",
  "translation": "直到生产的每个后期，才经常考虑或建立数据归档和保留策略，这会导致资源浪费，不同数据库之间的数据状态不一致以及数据查询和更新的性能不佳。 为了加强数据完整性，数据架构师应基于操作标准在数据体系结构中定义数据归档和保留策略。"
}, {
  "tag": "P",
  "text": "Privacy and security information",
  "translation": "隐私和安全信息"
}, {
  "tag": "P",
  "text": "Privacy and security become an essential aspect of the logical database design. While the conceptual design has defined which data component is sensitive information, the logical design should have the confidential information protected in a database with limited access, restricted data replication, particular data type, and secured data flows to protect the information.",
  "translation": "隐私和安全性成为逻辑数据库设计的重要方面。 虽然概念设计已定义了哪个数据成分是敏感信息，但逻辑设计应在具有受限访问权限，受限数据复制，特定数据类型和安全数据流的数据库中保护机密信息，以保护信息。"
}, {
  "tag": "P",
  "text": "Data Replications",
  "translation": "资料复制"
}, {
  "tag": "P",
  "text": "Data Replication is a critical aspect to consider for three objectives: 1) High availability; 2) Performance to avoid data transferring over the network; 3) De-coupling to minimize the downstream impact. Excessive data replications, however, can lead to confusion, poor data quality, and poor performance. Any data replication should be examined by data architect and applied with principles and disciplines.",
  "translation": "数据复制是要考虑三个目标的关键方面：1）高可用性； 2）避免通过网络传输数据的性能； 3）去耦以最小化下游影响。 但是，过多的数据复制会导致混乱，数据质量差和性能下降。 任何数据复制都应由数据架构师检查，并应遵循原则和纪律。"
}, {
  "tag": "P",
  "text": "Data Flows and Pipelines",
  "translation": "数据流和管道"
}, {
  "tag": "P",
  "text": "How data flows between different database systems and applications should be clearly defined at this level. Again, this flow is consistent with the flow illustrated in the business process and data architect conceptual level. Besides, the frequencies of the data ingestion, data transformations in the pipelines, and data access patterns against the output data should be considered in an integrated view in the logical design. For example, if an upstream data source comes in real-time, while a downstream system is mainly used for data access of aggregated information with heavy indexes (e.g., expensive for frequent updates and inserts), a data pipeline needs to be designed in between to optimize the performance.",
  "translation": "在此级别上，应明确定义数据在不同数据库系统和应用程序之间的流动方式。 同样，此流程与业务流程和数据架构师概念级别中说明的流程一致。 此外，应在逻辑设计的集成视图中考虑数据摄取的频率，流水线中的数据转换以及针对输出数据的数据访问模式。 例如，如果上游数据源是实时的，而下游系统主要用于具有重索引的聚合信息的数据访问（例如，对于频繁的更新和插入来说很昂贵），则需要在两者之间设计数据管道。 优化性能。"
}, {
  "tag": "H2",
  "text": "3. Data Governance is the Key to the Continous Success of Data Architecture.",
  "translation": "3.数据治理是数据架构持续成功的关键。"
}, {
  "tag": "P",
  "text": "As data architecture reflects and supports the business processes and flow, it is subject to change whenever the business process is changed. As the underlying database system is changed, the data architecture also needs to be adjusted. The data architecture, therefore, is not static but needs to be continuously managed, enhanced, and audited. Data governance, therefore, should be adopted to ensure that enterprise data architecture is designed and implemented correctly as each new project is being kicked off.",
  "translation": "由于数据体系结构反映并支持业务流程和流程，因此只要业务流程发生更改，数据架构就可能发生更改。 随着基础数据库系统的更改，数据体系结构也需要进行调整。 因此，数据体系结构不是静态的，而是需要进行连续的管理，增强和审核。 因此，应采用数据治理来确保在启动每个新项目时正确设计和实施企业数据体系结构。"
}, {
  "tag": "H1",
  "text": "Conclusion",
  "translation": "结论"
}, {
  "tag": "P",
  "text": "Within a successful data architecture, a conceptual design based on the business process is the most crucial ingredient, followed by a logical design that emphasizes consistency, integrity, and efficiency across all the databases and data pipelines. Once the data architecture is established, the organization can see what data resides where and ensure that the data is secured, stored efficiently, and processed accurately. Also, when one database or a component is changed, the data architecture can allow the organization to assess the impact quickly and guides all relevant teams on the designs and implementations. Lastly, the data architecture is a live document of the enterprise systems, which is guaranteed to be up-to-date and gives a clear end-to-end picture. In summary, a holistic data architecture that reflects the end-to-end business process and operations is essential for a company to advance quickly and efficiently while undergoing significant changes such as acquisitions, digital transformation, or migration to the next-gen platform.",
  "translation": "在成功的数据体系结构中，基于业务流程的概念设计是最关键的组成部分，其次是强调所有数据库和数据管道之间的一致性，完整性和效率的逻辑设计。建立数据体系结构后，组织可以查看哪些数据驻留在何处，并确保数据得到保护，有效存储和正确处理。而且，当一个数据库或组件发生更改时，数据体系结构可以使组织迅速评估影响并指导所有相关团队进行设计和实现。最后，数据体系结构是企业系统的实时文档，可以保证它是最新的，并提供清晰的端到端图。总之，反映端到端业务流程和运营的整体数据架构对于公司在经历重大变化（例如收购，数字转换或迁移到下一代平台）时快速有效地发展至关重要。"
}, {
  "tag": "PRE",
  "text": "(本文翻译自Stephanie Shen的文章《What is the Data Architecture We Need?》，参考：https://towardsdatascience.com/what-is-the-data-architecture-we-need-72606e71ba0c)",
  "translation": "（本文翻译自Stephanie Shen的文章，《我们需要什么数据架构？》，参考：https：//towardsdatascience.com/what-is-the-data-architecture-we-need-72606e71ba0c）"
}]