[{
  "tag": "H1",
  "text": "Bonus: Learn to Solve Errors Quickly",
  "translation": "奖励：学会快速解决错误"
}, {
  "tag": "P",
  "text": "This is such a big topic that doesn’t get enough attention that I was debating writing a whole article on it. Instead, here’s a bonus section — a 5-step plan to resolve errors faster.",
  "translation": "这是一个很大的话题，没有引起足够的重视，以至于我一直在讨论写一篇完整的文章。 取而代之的是，这是一个奖励部分-5个步骤，可更快解决错误。"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/30/1*5KOqKGllIoQ5aYmjENRUlQ.png?q=20",
  "caption": "Translation: you called shape as method when it doesn’t exist, you wanted to get an attribute.",
  "type": "image",
  "file": "1!5KOqKGllIoQ5aYmjENRUlQ.png"
}, {
  "tag": "P",
  "text": "Every programmer see lots of errors. Once you’re experienced, most don’t cause more than a shrug, because you can resolve them in under a minute.",
  "translation": "每个程序员都会看到很多错误。 经验丰富后，大多数事情不会耸耸肩，因为您可以在一分钟内解决它们。"
}, {
  "tag": "P",
  "text": "However, when you are starting out, an error might take take 20 times longer to resolve. To a beginner, errors can make you feel like you’re trudging through ankle-deep mud.",
  "translation": "但是，一开始，解决错误可能需要花费20倍的时间。 对于初学者而言，错误可能会让您感到自己陷入了脚踝深处的泥泞之中。"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/30/1*w59vDkaPoHraLo9DTLKGfw.jpeg?q=20",
  "caption": "Muddy Errors. Source: https://pixabay.com/",
  "type": "image",
  "file": "1!w59vDkaPoHraLo9DTLKGfw.jpeg"
}, {
  "tag": "P",
  "text": "Here’s a game plan for resolving 95% of errors quickly."
}, {
  "tag": "H2",
  "text": "So you’ve got an error, what should you do?",
  "translation": "因此，您遇到了错误，该怎么办？"
}, {
  "tag": "OL",
  "texts": ["Look for a typo — a parentheses that’s missing or a variable or function that’s misspelled. Syntax highlighting can help here. Always do your typing in software that provides code highlighting to improving your chances of avoiding or quickly fixing indentation, unbalanced parentheses, and similar errors. There are lots of good code editors to choose from. If you are just starting out, I suggest VSCode — it has the most marketshare, it’s free, and it has gobs of handy features.", "Read the top and bottom of the error message stack trace first. The code in the middle is generally less helpful. Then look at your code and see if you can figure out what’s wrong, given the clues in the error message. If you can’t decode the error message quickly, copy and paste the last line of the message into Google (if using Python. Other languages might have the error message before the stack trace). New coders biggest mistake is not turning to google with an error message quickly enough."],
  "translations": ["寻找拼写错误-缺少括号或拼写错误的变量或函数。 语法突出显示可以在此处提供帮助。 务必在提供突出显示代码的软件中进行键入，以提高避免或快速修复缩进，不平衡括号和类似错误的机会。 有很多好的代码编辑器可供选择。 如果您刚刚起步，我建议您使用VSCode-它具有最大的市场份额，它是免费的，并且具有便捷的功能。", "首先阅读错误消息堆栈跟踪的顶部和底部。 中间的代码通常不太有用。 然后查看您的代码，根据错误消息中的线索，看看是否可以找出问题所在。 如果您无法快速解码错误消息，请将消息的最后一行复制并粘贴到Google中（如果使用的是Python。在堆栈跟踪之前，其他语言可能会显示错误消息）。 新编码员最大的错误是没有足够快地向Google提出错误消息。"]
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/30/1*-ZfUkHUU7dVcrBVqFQgY8w.png?q=20",
  "caption": "Source: https://pixabay.com/",
  "type": "image",
  "file": "1!-ZfUkHUU7dVcrBVqFQgY8w.png"
}, {
  "tag": "P",
  "text": "3. Filter the online resources to separate the wheat from the chaff. 🌾 Here area few heuristics to help you find higher quality resources faster. 😀",
  "translation": "3.过滤在线资源以将小麦与谷壳分离。 🌾在这里，一些启发式方法可以帮助您更快地找到更高质量的资源。 😀"
}, {
  "tag": "P",
  "text": "Stack Overflow, Medium, Reddit, Hacker News, Dev and other online communities have feedback indicators such as upvotes or claps to show which content is on target. These metrics aren’t perfect, but they generally work pretty well. Stack Overflow, the Towards Data Science Medium publication, GitHub issues for the repo in question, the official docs for a language or library are the sites where I find the most solutions.",
  "translation": "Stack Overflow，Medium，Reddit，Hacker News，Dev和其他在线社区都有反馈指标，例如投票或鼓掌，以显示目标内容。 这些指标并不完美，但通常效果很好。 Stack Overflow，Towards Data Science Medium出版物，有问题的回购的GitHub问题，语言或库的官方文档是我找到最多解决方案的站点。"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/30/1*XPHTeV4igPFkGHoV7g0YzQ.jpeg?q=20",
  "caption": "On target. Source: https://pixabay.com/",
  "type": "image",
  "file": "1!XPHTeV4igPFkGHoV7g0YzQ.jpeg"
}, {
  "tag": "P",
  "text": "It’s hit or miss with the quality of blogs in Google search results. If you’re using Python, I can suggest some good sites based on my experience:",
  "translation": "Google搜索结果中博客质量的高低可能会引起轰动。 如果您使用的是Python，我可以根据我的经验为您推荐一些不错的网站："
}, {
  "tag": "UL",
  "texts": ["Real Python", "Data School", "Dataquest Blog", "DataCamp Blog", "Practical Business Python", "Chris Albon"],
  "translations": ["真正的Python", "数据学校", "Dataquest网志", "DataCamp博客", "实用商务Python", "克里斯·阿尔邦"]
}, {
  "tag": "P",
  "text": "4. Avoid older resources. For most problems, you want resources that aren’t more than a few years old. When searching for a solution to an error on Google, filter out old results — either by time-boxing the search parameters or informally when looking over the resulting snippets.",
  "translation": "4.避免使用较旧的资源。 对于大多数问题，您需要不超过几年的资源。 在Google上寻找错误的解决方案时，请过滤掉旧结果-通过对搜索参数进行时间装箱或在查看结果摘要时非正式地进行过滤。"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/30/1*frVhA1HnMyTwcJLEUdG6fA.png?q=20",
  "caption": "Time limiting search results with Google search tools",
  "type": "image",
  "file": "1!frVhA1HnMyTwcJLEUdG6fA.png"
}, {
  "tag": "P",
  "text": "If you’re starting out in Python, content about Python 2 from 2009 is unlikely to help you. 🐍",
  "translation": "如果您刚开始使用Python，那么2009年以来关于Python 2的内容不太可能对您有所帮助。 🐍"
}, {
  "tag": "P",
  "text": "APIs evolve and how things were done is often not the recommended way to do them today. You are more likely to find an applicable answer in relatively recent results. 📆",
  "translation": "API不断发展，今天通常不建议采用做事方式。 您更有可能在相对较近期的结果中找到适用的答案。 📆"
}, {
  "tag": "P",
  "text": "If your initial forays are unsuccessful, then it’s worth looking through older posts and lower-quality sites on the next pass.",
  "translation": "如果您最初的尝试不成功，则值得在下一张通关中浏览旧帖子和质量较低的网站。"
}, {
  "tag": "P",
  "text": "5. Learn what error codes mean. Here’s a list of common error codes and explanations for Python. And here’s a really nice flow chart to help you tackle common Python errors.",
  "translation": "5.了解错误代码的含义。 这是Python的常见错误代码和说明的列表。 这是一个非常不错的流程图，可帮助您解决常见的Python错误。"
}, {
  "tag": "P",
  "text": "If you use the Python pandas library for data manipulation, there are common errors. Here’s a GitHub Gist I made with a Jupyter notebook of common errors and how to resolve them:",
  "translation": "如果使用Python pandas库进行数据操作，则存在常见错误。 这是我用Jupyter笔记本制作的GitHub Gist，其中包含常见错误以及如何解决这些错误："
}, {
  "tag": "FIGURE",
  "type": "code",
  "raw": "https://gist.github.com/discdiver/2f8df1c3f1c66f47129568a82c0666e5/raw/9cf6769e2803f45dee5ce3bc8a69df6d63528894/common_pandas_errors.ipynb",
  "code": "{\n \"cells\": [\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 1,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import pandas as pd\\n\",\n    \"import numpy as np\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Using the pandas library by the name `pandas` when you created an alias for it.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 2,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"ename\": \"NameError\",\n     \"evalue\": \"name 'pandas' is not defined\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n      \"\\u001b[0;31mNameError\\u001b[0m                                 Traceback (most recent call last)\",\n      \"\\u001b[0;32m<ipython-input-2-068244f7ed4b>\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[0;32m----> 1\\u001b[0;31m \\u001b[0mpandas\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m__version__\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\",\n      \"\\u001b[0;31mNameError\\u001b[0m: name 'pandas' is not defined\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"pandas.__version__\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 6,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"'1.0.1'\"\n      ]\n     },\n     \"execution_count\": 6,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"pd.__version__\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Make a DataFrame\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 21,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df = pd.DataFrame(dict(col1=['a', 'b', 'c']), index=['first', 'second', 'third'])\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 22,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>col1</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>first</th>\\n\",\n       \"      <td>a</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>second</th>\\n\",\n       \"      <td>b</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>third</th>\\n\",\n       \"      <td>c</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"       col1\\n\",\n       \"first     a\\n\",\n       \"second    b\\n\",\n       \"third     c\"\n      ]\n     },\n     \"execution_count\": 22,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Calling `sort_values()` on a DataFrame without an column name to sort by.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 23,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"ename\": \"TypeError\",\n     \"evalue\": \"sort_values() missing 1 required positional argument: 'by'\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n      \"\\u001b[0;31mTypeError\\u001b[0m                                 Traceback (most recent call last)\",\n      \"\\u001b[0;32m<ipython-input-23-9baf0daa5fc6>\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[0;32m----> 1\\u001b[0;31m \\u001b[0mdf\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0msort_values\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\",\n      \"\\u001b[0;31mTypeError\\u001b[0m: sort_values() missing 1 required positional argument: 'by'\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df.sort_values()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 24,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>col1</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>first</th>\\n\",\n       \"      <td>a</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>second</th>\\n\",\n       \"      <td>b</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>third</th>\\n\",\n       \"      <td>c</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"       col1\\n\",\n       \"first     a\\n\",\n       \"second    b\\n\",\n       \"third     c\"\n      ]\n     },\n     \"execution_count\": 24,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df.sort_values('col1')\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Calling a Series method on a DataFrame when there is no DataFrame method of the same name.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 25,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"ename\": \"AttributeError\",\n     \"evalue\": \"'DataFrame' object has no attribute 'value_counts'\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n      \"\\u001b[0;31mAttributeError\\u001b[0m                            Traceback (most recent call last)\",\n      \"\\u001b[0;32m<ipython-input-25-986e25863b45>\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[0;32m----> 1\\u001b[0;31m \\u001b[0mdf\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mvalue_counts\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/generic.py\\u001b[0m in \\u001b[0;36m__getattr__\\u001b[0;34m(self, name)\\u001b[0m\\n\\u001b[1;32m   5272\\u001b[0m             \\u001b[0;32mif\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_info_axis\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_can_hold_identifiers_and_holds_name\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mname\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   5273\\u001b[0m                 \\u001b[0;32mreturn\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0mname\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 5274\\u001b[0;31m             \\u001b[0;32mreturn\\u001b[0m \\u001b[0mobject\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m__getattribute__\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mname\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   5275\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   5276\\u001b[0m     \\u001b[0;32mdef\\u001b[0m \\u001b[0m__setattr__\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mname\\u001b[0m\\u001b[0;34m:\\u001b[0m \\u001b[0mstr\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mvalue\\u001b[0m\\u001b[0;34m)\\u001b[0m \\u001b[0;34m->\\u001b[0m \\u001b[0;32mNone\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;31mAttributeError\\u001b[0m: 'DataFrame' object has no attribute 'value_counts'\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df.value_counts()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 26,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"b    1\\n\",\n       \"c    1\\n\",\n       \"a    1\\n\",\n       \"Name: col1, dtype: int64\"\n      ]\n     },\n     \"execution_count\": 26,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df['col1'].value_counts()\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Using `.iloc[]` to try to index by row name.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 27,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"ename\": \"TypeError\",\n     \"evalue\": \"Cannot index by location index with a non-integer key\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n      \"\\u001b[0;31mTypeError\\u001b[0m                                 Traceback (most recent call last)\",\n      \"\\u001b[0;32m<ipython-input-27-37589c22a003>\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[0;32m----> 1\\u001b[0;31m \\u001b[0mdf\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0miloc\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;34m'a'\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/indexing.py\\u001b[0m in \\u001b[0;36m__getitem__\\u001b[0;34m(self, key)\\u001b[0m\\n\\u001b[1;32m   1765\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   1766\\u001b[0m             \\u001b[0mmaybe_callable\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mcom\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mapply_if_callable\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mobj\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 1767\\u001b[0;31m             \\u001b[0;32mreturn\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_getitem_axis\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mmaybe_callable\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0maxis\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0maxis\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   1768\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   1769\\u001b[0m     \\u001b[0;32mdef\\u001b[0m \\u001b[0m_is_scalar_access\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mkey\\u001b[0m\\u001b[0;34m:\\u001b[0m \\u001b[0mTuple\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/indexing.py\\u001b[0m in \\u001b[0;36m_getitem_axis\\u001b[0;34m(self, key, axis)\\u001b[0m\\n\\u001b[1;32m   2132\\u001b[0m             \\u001b[0mkey\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mitem_from_zerodim\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   2133\\u001b[0m             \\u001b[0;32mif\\u001b[0m \\u001b[0;32mnot\\u001b[0m \\u001b[0mis_integer\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 2134\\u001b[0;31m                 \\u001b[0;32mraise\\u001b[0m \\u001b[0mTypeError\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m\\\"Cannot index by location index with a non-integer key\\\"\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   2135\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   2136\\u001b[0m             \\u001b[0;31m# validate the location\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;31mTypeError\\u001b[0m: Cannot index by location index with a non-integer key\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df.iloc['a']\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 29,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"col1    b\\n\",\n       \"Name: second, dtype: object\"\n      ]\n     },\n     \"execution_count\": 29,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df.loc['second']\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Subsetting by an row index number that doesn't exist.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 19,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"ename\": \"IndexError\",\n     \"evalue\": \"single positional indexer is out-of-bounds\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n      \"\\u001b[0;31mIndexError\\u001b[0m                                Traceback (most recent call last)\",\n      \"\\u001b[0;32m<ipython-input-19-dd7c84f36f80>\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[0;32m----> 1\\u001b[0;31m \\u001b[0mdf\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0miloc\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;36m3\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/indexing.py\\u001b[0m in \\u001b[0;36m__getitem__\\u001b[0;34m(self, key)\\u001b[0m\\n\\u001b[1;32m   1765\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   1766\\u001b[0m             \\u001b[0mmaybe_callable\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mcom\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mapply_if_callable\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mobj\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 1767\\u001b[0;31m             \\u001b[0;32mreturn\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_getitem_axis\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mmaybe_callable\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0maxis\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0maxis\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   1768\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   1769\\u001b[0m     \\u001b[0;32mdef\\u001b[0m \\u001b[0m_is_scalar_access\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mkey\\u001b[0m\\u001b[0;34m:\\u001b[0m \\u001b[0mTuple\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/indexing.py\\u001b[0m in \\u001b[0;36m_getitem_axis\\u001b[0;34m(self, key, axis)\\u001b[0m\\n\\u001b[1;32m   2135\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   2136\\u001b[0m             \\u001b[0;31m# validate the location\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 2137\\u001b[0;31m             \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_validate_integer\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0maxis\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   2138\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   2139\\u001b[0m             \\u001b[0;32mreturn\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_get_loc\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0maxis\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0maxis\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/indexing.py\\u001b[0m in \\u001b[0;36m_validate_integer\\u001b[0;34m(self, key, axis)\\u001b[0m\\n\\u001b[1;32m   2060\\u001b[0m         \\u001b[0mlen_axis\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mlen\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mobj\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_get_axis\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0maxis\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   2061\\u001b[0m         \\u001b[0;32mif\\u001b[0m \\u001b[0mkey\\u001b[0m \\u001b[0;34m>=\\u001b[0m \\u001b[0mlen_axis\\u001b[0m \\u001b[0;32mor\\u001b[0m \\u001b[0mkey\\u001b[0m \\u001b[0;34m<\\u001b[0m \\u001b[0;34m-\\u001b[0m\\u001b[0mlen_axis\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 2062\\u001b[0;31m             \\u001b[0;32mraise\\u001b[0m \\u001b[0mIndexError\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m\\\"single positional indexer is out-of-bounds\\\"\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   2063\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   2064\\u001b[0m     \\u001b[0;32mdef\\u001b[0m \\u001b[0m_getitem_tuple\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mtup\\u001b[0m\\u001b[0;34m:\\u001b[0m \\u001b[0mTuple\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;31mIndexError\\u001b[0m: single positional indexer is out-of-bounds\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df.iloc[3]\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 18,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"col1    c\\n\",\n       \"Name: 2, dtype: object\"\n      ]\n     },\n     \"execution_count\": 18,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df.iloc[2]\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Subsetting a column with a column name that doesn't exist.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 15,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"ename\": \"KeyError\",\n     \"evalue\": \"'col2'\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n      \"\\u001b[0;31mKeyError\\u001b[0m                                  Traceback (most recent call last)\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/indexes/base.py\\u001b[0m in \\u001b[0;36mget_loc\\u001b[0;34m(self, key, method, tolerance)\\u001b[0m\\n\\u001b[1;32m   2645\\u001b[0m             \\u001b[0;32mtry\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 2646\\u001b[0;31m                 \\u001b[0;32mreturn\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_engine\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mget_loc\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   2647\\u001b[0m             \\u001b[0;32mexcept\\u001b[0m \\u001b[0mKeyError\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32mpandas/_libs/index.pyx\\u001b[0m in \\u001b[0;36mpandas._libs.index.IndexEngine.get_loc\\u001b[0;34m()\\u001b[0m\\n\",\n      \"\\u001b[0;32mpandas/_libs/index.pyx\\u001b[0m in \\u001b[0;36mpandas._libs.index.IndexEngine.get_loc\\u001b[0;34m()\\u001b[0m\\n\",\n      \"\\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\\u001b[0m in \\u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\\u001b[0;34m()\\u001b[0m\\n\",\n      \"\\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\\u001b[0m in \\u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\\u001b[0;34m()\\u001b[0m\\n\",\n      \"\\u001b[0;31mKeyError\\u001b[0m: 'col2'\",\n      \"\\nDuring handling of the above exception, another exception occurred:\\n\",\n      \"\\u001b[0;31mKeyError\\u001b[0m                                  Traceback (most recent call last)\",\n      \"\\u001b[0;32m<ipython-input-15-fbc8de4a449f>\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[0;32m----> 1\\u001b[0;31m \\u001b[0mdf\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;34m'col2'\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/frame.py\\u001b[0m in \\u001b[0;36m__getitem__\\u001b[0;34m(self, key)\\u001b[0m\\n\\u001b[1;32m   2798\\u001b[0m             \\u001b[0;32mif\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mcolumns\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mnlevels\\u001b[0m \\u001b[0;34m>\\u001b[0m \\u001b[0;36m1\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   2799\\u001b[0m                 \\u001b[0;32mreturn\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_getitem_multilevel\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 2800\\u001b[0;31m             \\u001b[0mindexer\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mcolumns\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mget_loc\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   2801\\u001b[0m             \\u001b[0;32mif\\u001b[0m \\u001b[0mis_integer\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mindexer\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   2802\\u001b[0m                 \\u001b[0mindexer\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0;34m[\\u001b[0m\\u001b[0mindexer\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/indexes/base.py\\u001b[0m in \\u001b[0;36mget_loc\\u001b[0;34m(self, key, method, tolerance)\\u001b[0m\\n\\u001b[1;32m   2646\\u001b[0m                 \\u001b[0;32mreturn\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_engine\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mget_loc\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   2647\\u001b[0m             \\u001b[0;32mexcept\\u001b[0m \\u001b[0mKeyError\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 2648\\u001b[0;31m                 \\u001b[0;32mreturn\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_engine\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mget_loc\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_maybe_cast_indexer\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   2649\\u001b[0m         \\u001b[0mindexer\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mget_indexer\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mmethod\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mmethod\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mtolerance\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mtolerance\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   2650\\u001b[0m         \\u001b[0;32mif\\u001b[0m \\u001b[0mindexer\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mndim\\u001b[0m \\u001b[0;34m>\\u001b[0m \\u001b[0;36m1\\u001b[0m \\u001b[0;32mor\\u001b[0m \\u001b[0mindexer\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0msize\\u001b[0m \\u001b[0;34m>\\u001b[0m \\u001b[0;36m1\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32mpandas/_libs/index.pyx\\u001b[0m in \\u001b[0;36mpandas._libs.index.IndexEngine.get_loc\\u001b[0;34m()\\u001b[0m\\n\",\n      \"\\u001b[0;32mpandas/_libs/index.pyx\\u001b[0m in \\u001b[0;36mpandas._libs.index.IndexEngine.get_loc\\u001b[0;34m()\\u001b[0m\\n\",\n      \"\\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\\u001b[0m in \\u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\\u001b[0;34m()\\u001b[0m\\n\",\n      \"\\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\\u001b[0m in \\u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\\u001b[0;34m()\\u001b[0m\\n\",\n      \"\\u001b[0;31mKeyError\\u001b[0m: 'col2'\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df['col2']\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 16,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"0    a\\n\",\n       \"1    b\\n\",\n       \"2    c\\n\",\n       \"Name: col1, dtype: object\"\n      ]\n     },\n     \"execution_count\": 16,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df['col1']\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Not calling the method correctly, a Python issue, left off the closing parentheses.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 30,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"ename\": \"SyntaxError\",\n     \"evalue\": \"unexpected EOF while parsing (<ipython-input-30-c6c359318121>, line 1)\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;36m  File \\u001b[0;32m\\\"<ipython-input-30-c6c359318121>\\\"\\u001b[0;36m, line \\u001b[0;32m1\\u001b[0m\\n\\u001b[0;31m    df = pd.DataFrame(dict(col1=['a', 'b', 'c']), index=['first', 'second', 'third']\\u001b[0m\\n\\u001b[0m                                                                                    ^\\u001b[0m\\n\\u001b[0;31mSyntaxError\\u001b[0m\\u001b[0;31m:\\u001b[0m unexpected EOF while parsing\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df = pd.DataFrame(dict(col1=['a', 'b', 'c']), index=['first', 'second', 'third']\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 31,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df = pd.DataFrame(dict(col1=['a', 'b', 'c']), index=['first', 'second', 'third'])\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Not creating a dictionary correctly (2x). This is actually a Python issue.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 32,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"ename\": \"SyntaxError\",\n     \"evalue\": \"positional argument follows keyword argument (<ipython-input-32-303fbad1a183>, line 1)\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;36m  File \\u001b[0;32m\\\"<ipython-input-32-303fbad1a183>\\\"\\u001b[0;36m, line \\u001b[0;32m1\\u001b[0m\\n\\u001b[0;31m    df = pd.DataFrame(dict(col1='a', 'b', 'c'), index=['first', 'second', 'third'])\\u001b[0m\\n\\u001b[0m                                    ^\\u001b[0m\\n\\u001b[0;31mSyntaxError\\u001b[0m\\u001b[0;31m:\\u001b[0m positional argument follows keyword argument\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df = pd.DataFrame(dict(col1='a', 'b', 'c'), index=['first', 'second', 'third'])\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 34,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"ename\": \"SyntaxError\",\n     \"evalue\": \"invalid syntax (<ipython-input-34-22826fefaba9>, line 1)\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;36m  File \\u001b[0;32m\\\"<ipython-input-34-22826fefaba9>\\\"\\u001b[0;36m, line \\u001b[0;32m1\\u001b[0m\\n\\u001b[0;31m    df = pd.DataFrame(dict([col1='a', 'b', 'c']), index=['first', 'second', 'third'])\\u001b[0m\\n\\u001b[0m                                ^\\u001b[0m\\n\\u001b[0;31mSyntaxError\\u001b[0m\\u001b[0;31m:\\u001b[0m invalid syntax\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df = pd.DataFrame(dict([col1='a', 'b', 'c']), index=['first', 'second', 'third'])\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 35,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df = pd.DataFrame(dict(col1=['a', 'b', 'c']), index=['first', 'second', 'third'])\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"`shape` isn't an attribute, not a method. The error could say that or pandas could make it a method that returns the shape attribute.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 36,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"ename\": \"TypeError\",\n     \"evalue\": \"'tuple' object is not callable\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n      \"\\u001b[0;31mTypeError\\u001b[0m                                 Traceback (most recent call last)\",\n      \"\\u001b[0;32m<ipython-input-36-0e566b70f572>\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[0;32m----> 1\\u001b[0;31m \\u001b[0mdf\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mshape\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\",\n      \"\\u001b[0;31mTypeError\\u001b[0m: 'tuple' object is not callable\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df.shape()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 37,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"(3, 1)\"\n      ]\n     },\n     \"execution_count\": 37,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df.shape\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 38,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"ename\": \"AttributeError\",\n     \"evalue\": \"'Series' object has no attribute 'info'\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n      \"\\u001b[0;31mAttributeError\\u001b[0m                            Traceback (most recent call last)\",\n      \"\\u001b[0;32m<ipython-input-38-741823e1b22c>\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[0;32m----> 1\\u001b[0;31m \\u001b[0mdf\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;34m'col1'\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0minfo\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/generic.py\\u001b[0m in \\u001b[0;36m__getattr__\\u001b[0;34m(self, name)\\u001b[0m\\n\\u001b[1;32m   5272\\u001b[0m             \\u001b[0;32mif\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_info_axis\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_can_hold_identifiers_and_holds_name\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mname\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   5273\\u001b[0m                 \\u001b[0;32mreturn\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0mname\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 5274\\u001b[0;31m             \\u001b[0;32mreturn\\u001b[0m \\u001b[0mobject\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m__getattribute__\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mname\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   5275\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   5276\\u001b[0m     \\u001b[0;32mdef\\u001b[0m \\u001b[0m__setattr__\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mname\\u001b[0m\\u001b[0;34m:\\u001b[0m \\u001b[0mstr\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mvalue\\u001b[0m\\u001b[0;34m)\\u001b[0m \\u001b[0;34m->\\u001b[0m \\u001b[0;32mNone\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;31mAttributeError\\u001b[0m: 'Series' object has no attribute 'info'\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df['col1'].info()\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Reminder of how the DataFrame looks.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 40,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>col1</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>first</th>\\n\",\n       \"      <td>a</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>second</th>\\n\",\n       \"      <td>b</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>third</th>\\n\",\n       \"      <td>c</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"       col1\\n\",\n       \"first     a\\n\",\n       \"second    b\\n\",\n       \"third     c\"\n      ]\n     },\n     \"execution_count\": 40,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Forgetting to pass `axis='columns'`. \"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 41,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"ename\": \"KeyError\",\n     \"evalue\": \"\\\"['col1'] not found in axis\\\"\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n      \"\\u001b[0;31mKeyError\\u001b[0m                                  Traceback (most recent call last)\",\n      \"\\u001b[0;32m<ipython-input-41-1827a6319199>\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[0;32m----> 1\\u001b[0;31m \\u001b[0mdf\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mdrop\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m'col1'\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/frame.py\\u001b[0m in \\u001b[0;36mdrop\\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\\u001b[0m\\n\\u001b[1;32m   3995\\u001b[0m             \\u001b[0mlevel\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mlevel\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   3996\\u001b[0m             \\u001b[0minplace\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0minplace\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 3997\\u001b[0;31m             \\u001b[0merrors\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0merrors\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   3998\\u001b[0m         )\\n\\u001b[1;32m   3999\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/generic.py\\u001b[0m in \\u001b[0;36mdrop\\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\\u001b[0m\\n\\u001b[1;32m   3934\\u001b[0m         \\u001b[0;32mfor\\u001b[0m \\u001b[0maxis\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mlabels\\u001b[0m \\u001b[0;32min\\u001b[0m \\u001b[0maxes\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mitems\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   3935\\u001b[0m             \\u001b[0;32mif\\u001b[0m \\u001b[0mlabels\\u001b[0m \\u001b[0;32mis\\u001b[0m \\u001b[0;32mnot\\u001b[0m \\u001b[0;32mNone\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 3936\\u001b[0;31m                 \\u001b[0mobj\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mobj\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_drop_axis\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mlabels\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0maxis\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mlevel\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mlevel\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0merrors\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0merrors\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   3937\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   3938\\u001b[0m         \\u001b[0;32mif\\u001b[0m \\u001b[0minplace\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/generic.py\\u001b[0m in \\u001b[0;36m_drop_axis\\u001b[0;34m(self, labels, axis, level, errors)\\u001b[0m\\n\\u001b[1;32m   3968\\u001b[0m                 \\u001b[0mnew_axis\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0maxis\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mdrop\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mlabels\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mlevel\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mlevel\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0merrors\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0merrors\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   3969\\u001b[0m             \\u001b[0;32melse\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 3970\\u001b[0;31m                 \\u001b[0mnew_axis\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0maxis\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mdrop\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mlabels\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0merrors\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0merrors\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   3971\\u001b[0m             \\u001b[0mresult\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mreindex\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m**\\u001b[0m\\u001b[0;34m{\\u001b[0m\\u001b[0maxis_name\\u001b[0m\\u001b[0;34m:\\u001b[0m \\u001b[0mnew_axis\\u001b[0m\\u001b[0;34m}\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   3972\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m~/miniconda3/envs/main/lib/python3.7/site-packages/pandas/core/indexes/base.py\\u001b[0m in \\u001b[0;36mdrop\\u001b[0;34m(self, labels, errors)\\u001b[0m\\n\\u001b[1;32m   5016\\u001b[0m         \\u001b[0;32mif\\u001b[0m \\u001b[0mmask\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0many\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   5017\\u001b[0m             \\u001b[0;32mif\\u001b[0m \\u001b[0merrors\\u001b[0m \\u001b[0;34m!=\\u001b[0m \\u001b[0;34m\\\"ignore\\\"\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 5018\\u001b[0;31m                 \\u001b[0;32mraise\\u001b[0m \\u001b[0mKeyError\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34mf\\\"{labels[mask]} not found in axis\\\"\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   5019\\u001b[0m             \\u001b[0mindexer\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mindexer\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;34m~\\u001b[0m\\u001b[0mmask\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   5020\\u001b[0m         \\u001b[0;32mreturn\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mdelete\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mindexer\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;31mKeyError\\u001b[0m: \\\"['col1'] not found in axis\\\"\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df.drop('col1')\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Forgetting to reassign the resulting DataFrame to make the change permanent.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 44,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>col1</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>first</th>\\n\",\n       \"      <td>a</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>second</th>\\n\",\n       \"      <td>b</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>third</th>\\n\",\n       \"      <td>c</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"       col1\\n\",\n       \"first     a\\n\",\n       \"second    b\\n\",\n       \"third     c\"\n      ]\n     },\n     \"execution_count\": 44,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df.drop('col1', axis='columns')\\n\",\n    \"df\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 45,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df = df.drop('col1', axis='columns')\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 46,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>first</th>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>second</th>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>third</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"Empty DataFrame\\n\",\n       \"Columns: []\\n\",\n       \"Index: [first, second, third]\"\n      ]\n     },\n     \"execution_count\": 46,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Let me know if you have others!\\n\",\n    \"\\n\",\n    \"-Jeff Hale\"\n   ]\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.7.6\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 4\n}\n"
}, {
  "tag": "P",
  "text": "It would be great if Python and pandas provided really helpful error messages that included explanations of the likely cause of the errors. That sounds like a valuable project if anyone wants to tackle it! 👍",
  "translation": "如果Python和熊猫提供了真正有用的错误消息，其中包括错误可能原因的说明，那将是很好的。 如果有人想解决这个问题，那听起来像是一个有价值的项目！ 👍"
}, {
  "tag": "P",
  "text": "That concludes my plan for dealing with errors more quickly. Please let me know if you have other suggestions. 😀",
  "translation": "到此，我制定了更快处理错误的计划。 如果您还有其他建议，请告诉我。 😀"
}, {
  "tag": "H1",
  "text": "Wrap",
  "translation": "包裹"
}, {
  "tag": "P",
  "text": "Hopefully these 10 tips for reducing frustration and increasing your speed will save you time. And hopefully the 5-step plan for resolving error messages will help you or someone you learn more faster. 🚀",
  "translation": "希望这10条减少挫败感和提高速度的技巧可以节省您的时间。 希望解决错误消息的5步计划将帮助您或您所学的人更快。 🚀"
}, {
  "tag": "P",
  "text": "With the right mindset, a little guidance, and a lot of practice anyone can learn to code. It might not be fast or easy, but hopefully this article will make it a bit less frustrating.",
  "translation": "有了正确的心态，一点点指导和许多实践，任何人都可以学习编码。 它可能并不快速或容易，但是希望本文能使它减少一些挫败感。"
}, {
  "tag": "P",
  "text": "If you found this helpful, please share it on your favorite social media so other people can find it, too.",
  "translation": "如果您发现此功能有用，请在您喜欢的社交媒体上分享它，以便其他人也可以找到它。"
}, {
  "tag": "P",
  "text": "I write about Python, Docker, data science, and more. If any of that’s of interest to you, read more here and follow me on Medium. 😄",
  "translation": "我撰写有关Python，Docker，数据科学等的文章。 如果您有任何兴趣，请在此处阅读更多内容，并在Medium上关注我。 😄"
}, {
  "tag": "P",
  "text": "If you’re interested in tips to help you increase your productivity, I share lots of those in my monthly Data Awesome newsletter.",
  "translation": "如果您对帮助您提高工作效率的技巧感兴趣，请在我的每月Data Awesome时事通讯中分享很多。"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/proxy/1*oPkqiu1rrt-hC_lDMK-jQg.png",
  "type": "image",
  "file": "0548fdd8-02ec-45cd-b9e0-baaa977d1e2b"
}, {
  "tag": "P",
  "text": "Happy Learning! 🚀",
  "translation": "学习愉快！ 🚀"
}, {
  "tag": "H1",
  "text": "Ten Tips to Save you Time and Frustration When Programming ⏳",
  "translation": "节省编程时间和沮丧的十个技巧Tip"
}, {
  "tag": "H2",
  "text": "Plus a bonus plan for resolving errors faster 😀",
  "translation": "加上奖金计划，可以更快地解决错误😀"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/30/1*wEbScUKxiz85kNdz0lGsfA.jpeg?q=20",
  "caption": "Source: https://pixabay.com/",
  "type": "image",
  "file": "1!wEbScUKxiz85kNdz0lGsfA.jpeg"
}, {
  "tag": "P",
  "text": "I started and quit programming at least four times before I stuck with it. My survey of my data science students shows me this story is far from unusual.",
  "translation": "在坚持使用之前，我至少开始和退出了四次编程。 我对数据科学系学生的调查显示，这个故事绝非同寻常。"
}, {
  "tag": "P",
  "text": "Many false starts are due in part to the slow and tedious process of learning to code and the frustration that accompanies it. Consequently, I’m passionate about removing the unnecessary obstacles that prevent people from becoming competent coders. There will always be obstacles, but there’s no reason for unnecessary obstacles. 😁",
  "translation": "许多错误的开始部分是由于学习编码的过程缓慢而乏味，以及随之而来的挫败感所致。 因此，我非常热衷于消除不必要的障碍，这些障碍会阻止人们成为合格的编码人员。 总会有障碍，但没有理由要有不必要的障碍。 😁"
}, {
  "tag": "P",
  "text": "Here are 10 tips to help you more quickly leap over the hurdles and achieve a sense of competency. Many of these tips might seem minor or obvious to you if you’ve been coding for years, but when starting out, nothing is obvious. And even if you’ve been coding since cell phones were called car phones, there might be a tip or two that will save you time. 🎉",
  "translation": "这里有10条提示，可帮助您更快地越过障碍并增强能力。 如果您已经编码多年，那么其中的许多技巧对您而言可能是次要的或显而易见的。 而且，即使您自从手机被称为车载电话以来一直在进行编码，可能会有一两个提示可以节省您的时间。 🎉"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/30/1*QGy0sDG1Ipym5hGqgQQ_Eg.jpeg?q=20",
  "caption": "More than 10 tips. Source: https://pixabay.com/",
  "type": "image",
  "file": "1!QGy0sDG1Ipym5hGqgQQ_Eg.jpeg"
}, {
  "tag": "H1",
  "text": "Ten Tips",
  "translation": "十个秘诀"
}, {
  "tag": "OL",
  "texts": ["Split your screen. Most of the time when you are learning to code, I suggest you split your screen(s) into two side by side panels — one for the code you’re working on in your Jupyter notebook or code editor and one for your web browser. You’ll use your web browser to look at documentation, Stack Overflow, and tutorials. If your screen is too small, I suggest you get a bigger one — if you can afford it. You can get a 25 inch monitor on Amazon for a little over $100 in the US. As you get more proficient, you’ll often want to focus on a single piece of work. Use can use keyboard shortcut keys to toggle between split screen to full screen. For a Mac, I like the BetterSnapTool for $2.99, some Windows options are discussed in this article. 🖥", "Cut out distractions. Silence notifications on your computer and phone. Move your phone away from you if you can. Play some calming instrumental music or use noise cancelling headphones if you’re in a noisy area. The better you can focus, the faster you can learn. 🎻", "Type out example code. You can’t just read a tutorial and hope to remember it. Copying and pasting is of little value. You have to type it. Then extend it. Then type it from memory. “In theory there’s no difference between theory and practice. In practice, there is.” — Benjamin Brewster originally — not Yogi Berra. ⚾️", "Learn over multiple days. Learn a new code concept and quiz yourself on it over multiple days. Research shows that when it comes to remembering things for the long haul, spaced repetition works far better than cramming. 🚚", "Learn by teaching. Clearly explaining a concept to others — either out loud or in writing — forces you to understand the concept’s essence, draw relationships, and create analogies. You strengthen the connections in your brain. This tip is part of the excellent Feynman learning technique. 📚", "Language before library. Understand a programming language well before you try to use a library written it. Variable types aren’t the most exciting topic. Classes with attributes and methods might seem advanced. But once you understand a language really well, the library is far easier to use. You’ll make few errors and save so much time. 🎉", "Learn one thing at a time. Don’t try to learn two things at once. You don’t learn twice as slowly, you learn like 10x as slowly. 😉 Relatedly, don’t get distracted by shiny things. Have a place to keep URLs that look like tempting rabbit holes to jump down. Put the URLs that aren’t relevant for the thing you’re learning right now somewhere for safe keeping. One Tab is a handy Chrome extension to use to save tabs for later.", "Sleep, exercise, and stay resilient. 😴🏃🏾‍♀️Put your brain in a strong position to form and strengthen neural connections. 🧠 Learn more about techniques to help you stay sharp in my Memorable Python book.", "Learn to type code faster. ⌨️ You more you type unusual symbols, the faster you become at typing them. However, a little intentionality can speed this process significantly. Invest in learning good touch typing form. Here’s a little exercise to help from SpeedCoder.", "Become a pro with keyboard shortcuts. Here are links to shortcuts for Chrome, Mac, and Windows. If you’re a data scientist or data analyst, I made a GitHub Gist of Jupyter Lab shortcuts here. It’s also a good idea to create shortcuts for a Mac or Linux terminal by adding lines such as the following to your Bash Profile at ~/.bash_profile:alias gs=\"git status\". Then restart your terminal and type two keystrokes instead of two words. 😉"],
  "translations": ["分割屏幕。 在大多数时候，当您学习编码时，建议您将屏幕分成两个并排的面板-一个用于在Jupyter笔记本或代码编辑器中处理的代码，另一个用于Web浏览器。 您将使用网络浏览器查看文档，堆栈溢出和教程。 如果屏幕太小，我建议您买一个更大的屏幕（如果您负担得起的话）。 在美国，您可以以略高于100美元的价格在亚马逊上购买25英寸显示器。 随着您变得越来越熟练，您通常会希望将精力集中在一项工作上。 使用可以使用键盘快捷键在分割屏幕和全屏之间切换。 对于Mac，我喜欢BetterSnapTool，价格为2.99美元，本文讨论了一些Windows选项。 🖥", "消除干扰。 您的计算机和电话上的静音通知。 如果可以，请将手机移开。 如果您在嘈杂的地方，可以播放一些平静的乐器音乐或使用降噪耳机。 专注力越强，学习越快。 🎻", "输入示例代码。 您不能只是阅读教程并希望记住它。 复制和粘贴没有什么价值。 您必须输入它。 然后扩展它。 然后从内存中键入。 “理论上，理论和实践之间没有区别。 实际上，有。” 最初是本杰明·布鲁斯特（Benjamin Brewster），而不是Yogi Berra。 ⚾️", "多天学习。 学习一个新的代码概念，并在几天内对其进行测验。 研究表明，要想长途记忆，间隔重复的效果要比填塞更好。 🚚", "通过教学学习。 向他人清晰地（大声地或以书面形式）解释一个概念，会迫使您理解该概念的本质，建立关系并进行类比。 您加强了大脑的连接。 该技巧是出色的费曼学习技术的一部分。 📚", "图书馆之前的语言。 在尝试使用编写的库之前，请先很好地了解一种编程语言。 变量类型并不是最令人兴奋的话题。 具有属性和方法的类可能看起来很高级。 但是，一旦您真正了解一种语言，该库就更容易使用了。 您将犯很少的错误，并节省了很多时间。 🎉", "一次学习一件事。 不要试图一次学习两件事。 您学习的速度不会慢一倍，而学习的速度却慢十倍。 😉与此相关，不要被闪亮的事物分散注意力。 有一个地方可以保留看起来像诱人的兔子洞的URL。 将与您正在学习的内容无关的网址放在安全的地方。 一个标签页是一个方便的Chrome扩展程序，可用于保存标签页以备后用。", "睡眠，运动并保持弹性。 brain️将您的大脑置于牢固的位置，以形成和加强神经连接。 in在我的《难忘的Python》一书中了解有关帮助您保持敏锐技术的更多信息。", "学习更快地键入代码。 You️您输入不寻常的符号的次数越多，输入它们的速度就越快。 但是，稍加故意就可以大大加快此过程。 投资学习良好的触摸打字形式。 这是SpeedCoder提供的一些帮助。", "成为具有键盘快捷键的专业人士。 以下是指向Chrome，Mac和Windows的快捷方式的链接。 如果您是数据科学家或数据分析师，我在这里做了一个Jupyter Lab的GitHub Gist快捷方式。 通过在〜/ .bash_profile：alias gs =“ git status”处的Bash个人资料中添加以下内容，为Mac或Linux终端创建快捷方式也是一个好主意。 然后重新启动终端，然后键入两次击键而不是两个单词。 😉"]
}, {
  "tag": "PRE",
  "text": "(本文翻译自Jeff Hale的文章《Ten Tips to Save you Time and Frustration When Programming ⏳》，参考：https://towardsdatascience.com/ten-tips-to-save-you-time-and-frustration-when-programming-1f5a4b61f390)",
  "translation": "（本文翻译自Jeff Hale的文章《在编程时为您节省时间和沮丧的十个小技巧》，参考：https：//towardsdatascience.com/ten-tips-to-save-you-time-and-frustration-when- 编程-1f5a4b61f390）"
}]